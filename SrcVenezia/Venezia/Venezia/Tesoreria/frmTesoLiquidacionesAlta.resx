<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEliminarCheque.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
  <data name="btnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        SUVORK5CYII=
</value>
  </data>
</root>